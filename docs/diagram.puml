@startuml


package api {
    class BasicMessage {
    }

    interface Message {
        GetId() string
        GetTimestamp() string
    }

    interface MessageBus {
        Publish(string, Message)
        Subscribe(string, chan Message)
    }

    interface MessageStream {
        Publish(string, Message)
        Subscribe(string, chan Message)
    }
}

package nats {
    class NatsMessageBus {
    }
    class NatsMessageStream {
    }
    class NatsClient {
    }
    object NatsFactory {
    }
    class Decoder {
    }
    class Encoder {
    }
}

Encoder <-- NatsClient
Decoder <-- NatsClient


NatsFactory --> NatsMessageBus
NatsFactory --> NatsMessageStream

MessageBus --> Message
MessageStream --> Message

NatsMessageBus --|> MessageBus
NatsMessageBus --> Message
NatsMessageBus --> NatsClient

NatsMessageStream --> Message
NatsMessageStream --|> MessageStream
NatsMessageStream -> NatsClient

Message <|-- BasicMessage

@enduml
